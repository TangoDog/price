means['K1'],
K1),
K2 =ifelse(is.na(K2),
means['K2'],
K2),
Hor.W.t.W =ifelse(is.na(Hor.W.t.W),
means['Hor.W.t.W'],
Hor.W.t.W),
)
View(priceSof1a)
View(priceSof1a)
source()
search()
detach(priceSoftec)
attach(priceSof1a)
class(row.names)
priceSof1b = priceSof1[-84:-123,]
View(priceSof1b)
View(priceSof1b)
priceSof1c = mutate(priceSof1b,Phakic.Lens.Thickness =ifelse(is.na(Phakic.Lens.Thickness),
means['Phakic.Lens.Thickness'],
Phakic.Lens.Thickness),
Phakic.Anterior.Chamber.Depth =ifelse(is.na(Phakic.Anterior.Chamber.Depth),
means['Phakic.Anterior.Chamber.Depth'],
Phakic.Anterior.Chamber.Depth),
K1 =ifelse(is.na(K1),
means['K1'],
K1),
K2 =ifelse(is.na(K2),
means['K2'],
K2),
Hor.W.t.W =ifelse(is.na(Hor.W.t.W),
means['Hor.W.t.W'],
Hor.W.t.W),
)
View(priceSof1c)
View(priceSof1c)
priceSof1d = mutate(priceSof1c,SphEqu6 = X12.mo.M.sph + 0.5*M.cyl)
save.image()
priceSof1e = mutate(priceSof1d,ELP6 = FM.Calc_ELP_Post(Axial.Length,IOL.Power,SphEqu6,K1,K2))
priceSof1f = priceSof1e[-which(is.na(priceSof1e$ELP6)),]
priceSoftecHD = priceSof1f
save.image()
View(priceSoftecHD)
View(priceSoftecHD)
search()
detach(priceSof1a)
attach(priceSoftecHD)
histogram(SphEqu6)
hist(SphEqu6)
hist(SphEqu6,breaks=20)
sd(SphEqu6)
mean(SphEqu6)
summary(SphEqu6)
detach(priceSoftecHD)
priceSoftecHD= mutate(priceSoftecHD,PredErr = SphEqu6-Holladay.II.Target.chosen)
with(priceSoftecHD, hist(PredErr,breaks=20))
View(FMx_tsModel)
View(price411)
load("~/Documents/RStuff/FullCalc/T2FullCalc2.RData")
load("~/Desktop/T2FullCalc3.RData")
save.image()
load("~/FM_ts.BaseDF.RData")
View(FM_ts.BaseDF)
View(priceSoftecHD)
View(priceSoftecHD)
require(plyr)
search()
mns = apply(priceSoftecHD,2,median)
mns
df = apply(priceSoftecHD,2,as.numeric)
head(df)
View(df)
View(df)
View(priceSof1)
View(priceSof1)
View(priceSof1b)
View(priceSof1b)
View(priceSof1f)
View(priceSof1f)
View(priceSof1e)
View(priceSof1e)
View(priceSof1d)
View(priceSof1d)
View(priceSof1c)
View(priceSof1c)
View(priceSof1b)
View(priceSof1b)
priceSof1b[10,Phakic.Anterior.Chamber.Depth]
priceSof1b[10,'Phakic.Anterior.Chamber.Depth']
priceSof1b[10,'Phakic.Anterior.Chamber.Depth']=NA
View(priceSof1b)
View(priceSof1b)
priceSof1b$'Phakic.Anterior.Chamber.Depth'=as.numberic(priceSof1b$'Phakic.Anterior.Chamber.Depth')
priceSof1b$'Phakic.Anterior.Chamber.Depth'=as.numeric(priceSof1b$'Phakic.Anterior.Chamber.Depth')
priceSof1b[10,'Phakic.Anterior.Chamber.Depth']=mean( priceSof1b$'Phakic.Anterior.Chamber.Depth')
View(priceSof1b)
View(priceSof1b)
View(priceSof1a)
View(priceSof1a)
View(priceSof1)
View(priceSof1)
priceSof1x = priceSof1
ACD = priceSof1$'Phakic.Anterior.Chamber.Depth'
head(ACD)
ACD[10]
mean(ACD)
ACD[10] = 3.5
ACD
ACD = as.numeric(ACD)
ACD
priceSof1$IOL.Power
priceSof1$Axial.Length
priceSof1$Hor.W.t.W
ACD = priceSof1$Phakic.Anterior.Chamber.Depth
class(ACD)
ACD = as.character(ACD)
head(ACD)
head(ACD, 12)
ACD[10] = "3.5"
ACD = as.numeric(ACD)
head(ACD)
length(ACD)
ACD = ACD[-83:-115]
tail(ACD)
length(ACD)
priceSof1[84,'Phakic.Anterior.Chamber.Depth']
ACD[84] = 2.6
length(ACD)
tail(ACD)
ACD[83]=3.59
tail(ACD)
ACD = ACD[-84]
tail(ACD)
ELPnas =which(is.na(priceSof1e$ELP6))
ELPnas
length(ACD)
ACD = ACD[-ELPnas]
length(ACD)
tmp = priceSoftecHD
priceSoftecHD$Phakic.Anterior.Chamber.Depth = ACD
head(priceSoftecHD$Phakic.Anterior.Chamber.Depth)
tail(priceSoftecHD$Phakic.Anterior.Chamber.Depth)
save.image()
View(FM_ts.BaseDF)
View(priceSoftecHD)
apply(priceSoftecHD,2,is.numeric)
apply(priceSoftecHD,2,class)
tmp = priceSoftecHD
save.image()
dim(tmp)
names(tmp)
tmp2 = mutate(tmp,tmp[,c(2:3,5,7:98)]= as.numeric(tmp[,c(2:3,5,7:98)]))
tmp2 =tmp
tmp2[,c(2:3,5,7:98)]= as.numeric(tmp[,c(2:3,5,7:98)]))
tmp2[,c(2:3,5,7:98)]= as.numeric(tmp[,c(2:3,5,7:98)])
class(tmp)
vars = names(tmp)
length(vafrs)
length(vars)
head(vars)
vars = vars[c(-1,4,6)]
vars = vars[c(-1,-4,-6)]
head(vars)
tmp2 = ddply(tmp,vars,as.numeric)
warnings()
head(tmp2)
vars
class(tmp2)
dim(tmp2)
tmp2[1:10,96]
tmp2[1:10,95]
tmp3 = apply(priceSoftecHD,2,as.numeric)
head(tmp3)
class(tmp3)
tmp3 = data.frame(tmp3)
names(tmp3)
tmp3$"Date.of.surgery"  =priceSoftecHD$"Date.of.surgery"
tmp3$"Preop.Date"  =priceSoftecHD$"Preop.Date"
tmp3$"IOL.Model"  =priceSoftecHD$"IOL.Model"
priceSoftecHD1 = tmp3
save.image()
View(priceSoftecHD1)
View(priceSoftecHD1)
mns = apply(priceSoftecHD1,2,mean)
mns
mns = apply(priceSoftecHD1,2,mean,na.rm=T)
mns
mns = colmeans(priceSoftecHD1,na.rm=T)
mns = colMeans(priceSoftecHD1,na.rm=T)
mns = colMeans(priceSoftecHD1[c(2,3,5,6:98)],na.rm=T)
mns = colMeans(priceSoftecHD1[,c(2,3,5,6:98)],na.rm=T)
class(priceSoftec$Data.of.surgery)
class(priceSoftecHD1$Data.of.surgery)
apply(priceSoftecHD1,2,class)
attach(priceSoftecHD1)
mean(IOL.Power)
IOL.Ppwer[30]
IOL.Power[30]
? sample
ps = priceSoftecHD1
ps[sample(73,10),sample(98,10)]
priceSoftecHD2 = mutate(priceSoftecHD1, AConst = FM.CalcAconst(Axial.Length,K1,K2,IOL.Power,SphEqu6))
with(priceSoftechHD2,hist(AConst,breaks=20))
View(priceSoftecHD2)
View(priceSoftecHD2)
with(priceSoftecHD2,hist(AConst,breaks=20))
with(priceSoftecHD2,mean(AConst))
with(priceSoftecHD2,median(AConst))
names(priceSoftechHD2)
names(priceSoftecHD2)
save.image()
priceModel = priceSoftecH2[,c(5,7:23,56:61,65:67,73:75,95:98)]
priceModel = priceSoftecHD2[,c(5,7:23,56:61,65:67,73:75,95:98)]
save.image()
View(priceModel)
names(priceModel)
mns = array()
for (i in c(19:34)) mns[i]= mean(priceModel[,i],na.rm=T)
mns
which(is.na(priceModel[,20]))
priceModelNoNAs = priceModel
priceModelNoNAs[which(is.na(priceModel[,20])),20]
priceModelNoNAs[which(is.na(priceModel[,20])),20] = mns[20]
priceModelNoNAs[which(is.na(priceModel[,20])),20]
for (i in c(19:34)) priceModelNoNAs[which(is.na(priceModel[,i])),i]=mns[i];
tail(pricModelNoNAs)
tail(priceModelNoNAs)
which(is.na(priceModelNoNAs))
save.image()
edit(priceModelNoNAs)
priceModelNoNAs[is.na(priceModelNoNAs),]
priceModelNoNAs[,is.na(priceModelNoNAs)]
x <- c(rnorm(5),rep(NA,3),rnorm(5))    # sample data
dat <- data.frame(x,x)                 # make sample dataframe
dat2 <- as.matrix(dat)                 # convert to matrix
y <- which(is.na(dat)==TRUE)           # get index of NA values
dat2[y] <- "your string"               # replace all NA values
y
dat
nas = which(is.na(priceSoftecHD2))
nas
nas = which(is.na(priceModelNoNAs))
nas
di(priceModelNoNAs)
dim(priceModelNoNAs)
245 %\% 75
245 \ 75
245 %% 75
245 %/% 75
View(priceModelNoNAs)
View(priceModelNoNAs)
Edit(priceModelNoNAs)
edit(priceModelNoNAs)
nas
461 %% 75
461 %/% 75
priceModelNoNAs[11,'prepachy'] = mean(priceModelNoNAs$prepachy)
nas = which(is.na(priceModelNoNAs))
nqw
nas
which(is.na(priceModelNoNAs))
save.image()
getwd()
priceModelNoNAs[6,11]
priceModelNoNAs[11,6]
priceModelNoNAs[11,7]
dim(c(5,6,7))
( m <- matrix(1:12, 3, 4) )
div.3 <- m %% 3 == 0
which(div.3)
which(div.3, arr.ind = TRUE)
source('~/.active-rstudio-document')
findNAs(pricModelNoNAS)
findNAs(priceModelNoNAS)
View(priceModelNoNAs)
View(priceModelNoNAs)
findNAs(priceModelNoNAs)
m
rownames(m) <- paste("Case", 1:3, sep = "_")
which(m %% 5 == 0, arr.ind = TRUE)
m
names(m) = paste("Col",1:3,sep="_")
m
m = data.frame(M)
m = data.frame(m)
m
names(m) = paste("Col",1:3,sep="_")
m
which(div.3, arr.ind = TRUE)
dim(m) <- c(2, 2, 3); m
which(div.3, arr.ind = FALSE)
which(div.3, arr.ind = TRUE)
m
which(m %% 5 ==0)
which(m %% 5 ==0,arr.ind=T)
tmp = which(m %% 5 ==0,arr.ind=T)
tmp[,col]
source('~/.active-rstudio-document')
findNAs(priceModelNoNAs)
mean(priceModelNoNAs[,4])
mean(priceModelNoNAs[,4],na.rm=T)
priceModelNoNAs[11,7] = 0
findNAs(priceModelNoNAs)
mean(priceModelNoNAs[,4],na.rm=T)
mean(priceModelNoNAs[,7],na.rm=T)
priceModelNoNAs[11,7] = 627
priceModelNoNAs[20,4]=0
findNAs(priceModelNoNAs)
save.image()
findNAs(c(1,5,6,NA,10))
names(priceModelNoNAs)
mns = apply(priceModelNoNAs,2,mean)
mns
View(FM_ts.BaseDF)
rows = dim(FM_ts.BaseDF)[1]
rows
tmpBaseDF = FM_ts.BaseDF;
rows = dim(tmpBaseDF)[1];
for (i in (19:31)) {
cbind(tmpBaseDF,rep(mns[i],rows))
}
head(rep(mns[20],rows))
head(tmpBaseDF)
dim(tmpBaseDF)
cbind(tmpBaseDF,rep(mns[19],rows))
mns = apply(priceModelNoNAs,2,mean)
tmpBaseDF = FM_ts.BaseDF;
rows = dim(tmpBaseDF)[1];
for (i in (19:31)) {
tmpBaseDF= cbind(tmpBaseDF,rep(mns[i],rows))
}
dim(tmpBaseDF)
head(tmpBaseDF)
means['Phakic.Anterior.Chamber.Depth'],
View(x.train)
names(tmpBaseDF)[19:31] = names(priceModelNoNAs[19:31])
head(tmpBaseDF)
names(priceModelNoNAs)
names(tmpBaseDF)
mns[30]
names(FM_ts.BaseDF)
names(tmpBaseDF)[23:35] = names(priceModelNoNAs[19:31])
names(tmpBaseDF)[1:22] = names(FM_ts.BaseDF)
names(tmpBaseDF)
save.image()
head(tmpBaseDF)
names(priceModelNoNAs)[1]="IOLs"
priceModelx=mutate(priceModelNoNAs,Ref=presph+0.5*precyl)
names(priceModelx)
names(tmpBaseDF)
names(priceModelx)[33]='ELPs'
names(priceModelx)[8]='Axl'
names(priceModelx)[9]='WTW'
priceModelx$Capsulorhexis = 0
priceModelx$Capsulorhexis = 4.5
names(priceModelx)[10]='LT'
priceModelx$ExtraField1 = 0
priceModelx$ExtraField2 = 0
names(priceModelx)[11]='ACD'
priceModelx$Age==65
priceModelx$Age=65
tmpBaseDF1= tmpBaseDF[,c(-10,-11,-12,-13)]
save.image()
names(tmpBaseDF)
names(priceModelx)
names(tmpBaseDF1)
tN =names(tmpBaseDF1)
pN=names(priceModelx)
tN %in pN
tN %in% pN
priceModelx$Q =-0.19
tN %in% pN
pN=names(priceModelx)
tN %in% pN
tN %in% pN
savehistory("~/Documents/Price/price1.Rhistory")
priceMod1 = mutate(priceModelx,AConst=FM.CalcAconst(Axl,K1,K2,IOLs,SphEqu6))
names(priceMod1)
tN =names(tmpBaseDF1)
tN
tB=tN
tM = names(priceMod1)
tN %in% tB
tB %in% tN
mns
mns = apply(priceMod1,2,mean)
mns
sds= apply(priceMod1,2,sd)
sds
priceBase = tmpBaseDF1[(AConst<20.5 && AConst > 18),]
head(tmpBaseDF1$AConst)
priceBase = tmpBaseDF1[(tmpBaseDF1$AConst<20.5 && tmpBaseDF1$AConst > 18),]
select = which(tmpBaseDF1,(tmpBaseDF1$AConst<20.5 && tmpBaseDF1$AConst > 18))
help array.ind
select = tmpBaseDF1[which(AConst<20.5 && tmpBaseDF1$AConst > 18),]
select = tmpBaseDF1[which(tmpBaseDF1$AConst<20.5 && tmpBaseDF1$AConst > 18),]
View(priceSof1x)
FMx.bartcrubbed
FMx.bartscrubbed
FMx.bartScrubbed
FM.scrubAC.3
FM.scrubACx <-
function(df,AConst_def=118,tol=0.9) {   #Scrub the Aconstants
tmp1 = (subset(df,df$AConst > AConst_def - tol))
tmp2 = (subset(tmp1, tmp1$AConst < AConst_def +tol))
return(tmp2);
}
priceBase = FM.scrubACx(tmpBaseDF1,119.1,1.2)
priceBart = rbind(priceBase,priceMod1)
bN = names(priceBase)
mN = names(priceMod1)
bN
mN
priceModtrimmed = priceMod1[,bN]
bN %in% mN
head(priceBase$Rp)
mns
6.6/7.7
head(priceBase$Rc)
priceBase$Rp = 0.857*priceBase$Rc
head(priceBase$Rp)
priceMod1$Rc = priceMod1$Preop.Sag3mm
priceMod1$Rc = priceMod1$Preop.Sag3mm.
priceMod1$Rp = priceMod1$Preop.Post.Sag3mm.
save.image()
priceModtrimmed = priceMod1[,bN]
bN = names(priceBase)
mN = names(priceMod1)
bN %in% mN
bn=N
bN
mN
bN = bN[-13]
bN = names(priceBase)
mN = names(priceMod1)
bN %in% mN
Bn
bN
bN[13]
bN[-13]
bN2 = bN[-13]
bN2
bN2 %in% mN
priceBase2 = priceBase[,bN2]
dim(priceBase2)
dim(priceMod1)
priceMod2 =priceMod1[,bN2]
dim(priceMod2)
finalPrice = rbind(priceMod2,priceBase2)
dim(finalPrice)
save.image()
install.packages("BayesTree")
bN2
x.train = finalPrice[,c(1:16,18:30)]
y.train = finalPrice[,"ELPs"]
priceB1 = bart(x.train,y.train)
require(BayesTree)
makeind
priceB1 = bart(x.train,y.train)
plot(priceB1)
save.image()
savehistory("~/Documents/Price/price2.Rhistory")
tail(finalPrice)
head(finalPrice)
FM.CalcRpost
FM.CalcRpost()
FM.IOL_General
FM.IOL_General()
priceTest = finalPrice[sample(10,75),]
priceTest = finalPrice[sample(75,10),]
x.test = priceTest[,c(1:16,18:30)]
priceT1 = bart(x.train,y.train,x.test)
summary(priceT1)
yhat.test.mean
with(priceT1,yhat.test.mean)
testset= sample(75,10)
testset
priceTest = finalPrice[testset,]
x.test = priceTest[,c(1:16,18:30)]
priceT1 = bart(x.train,y.train,x.test)
Predicted = priceT1$yhat.test.mean
Actual = priceTest$ELPs
Predicted
Actual
plot (Predicted ~ Actual)
means
mns
FM.HaigisRLM
with(finalPrice, tst = rlm(as.numeric(ELPs)~as.numeric(ACD)+as.numeric(Axl)))
with(finalPrice, tst = rlm(as.numeric(ELPs)~as.numeric(ACD)+as.numeric(Axl)))
head(priceMod1)
search()
detach(priceSoftecHD1)
attach(priceMod1)
rm(ACD)
attach(priceMod1)
detach(priceMod1)
attach(priceMod1)
search()
detach(priceMod1)
detach(priceMod1)
search()
attach(priceMod1)
HaigPrice = rlm(as.numeric(ELPs) ~ as.numeric(ACD) + as.numeric(Axl), data = priceMod1);
require(MASS
)
HaigPrice = rlm(as.numeric(ELPs) ~ as.numeric(ACD) + as.numeric(Axl), data = priceMod1);
HaigPrice
names(priceFinal)
names(finalPrice)
savehistory("~/Documents/Price/Price3.Rhistory")
